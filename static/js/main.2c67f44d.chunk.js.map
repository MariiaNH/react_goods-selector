{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedProducts","modifySelectedProducts","good","setState","includes","filter","item","clearAll","this","className","length","join","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,iBAAkB,CAAC,Q,EAGrBC,uBAAyB,SAACC,GACxB,IAAQF,EAAqB,EAAKD,MAA1BC,iBAER,EAAKG,SAAS,CACZH,iBACEA,EAAiBI,SAASF,GACtBF,EAAiBK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,KAD7C,sBAEQF,GAFR,CAE0BE,O,EAKhCK,SAAW,WACT,EAAKJ,SAAS,CAAEH,iBAAkB,M,4CAGpC,WAAU,IAAD,OACCA,EAAqBQ,KAAKT,MAA1BC,iBAER,OACE,sBAAKS,UAAU,MAAf,UACE,qBACEA,UAAU,SADZ,UAG+B,IAA5BT,EAAiBU,OAAe,oBACA,IAA5BV,EAAiBU,OAAjB,UAAmCV,EAAnC,0BACIA,EAAiBW,KAAK,MAD1B,iBAGL,wBACEC,KAAK,SACLH,UAAS,8DAGuB,IAA5BT,EAAiBU,OACvB,wBACA,6BAEEG,QAAS,kBAAM,EAAKN,YATtB,sBAeF,qBAAKE,UAAU,QAAf,SACGZ,EAAgBiB,KAAI,SAAAZ,GAAI,OACvB,yBACEU,KAAK,SACLH,UAAS,gCAEJT,EAAiBI,SAASF,GAE7B,iBADA,sBALJ,UASGA,EACD,wBACEU,KAAK,SACLH,UAAS,oEAGJT,EAAiBI,SAASF,GAE/B,yBADA,8BAGAW,QAAS,kBAAM,EAAKZ,uBAAuBC,IAT7C,SAWGF,EAAiBI,SAASF,GAAQ,SAAW,0B,GAvE5Ca,IAAMC,WAiFTlB,ICnGfmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2c67f44d.chunk.js","sourcesContent":["/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedProducts: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedProducts: ['Jam'],\n  };\n\n  modifySelectedProducts = (good: string) => {\n    const { selectedProducts } = this.state;\n\n    this.setState({\n      selectedProducts: (\n        selectedProducts.includes(good)\n          ? selectedProducts.filter(item => item !== good)\n          : [...selectedProducts, good]\n      ),\n    });\n  };\n\n  clearAll = () => {\n    this.setState({ selectedProducts: [] });\n  };\n\n  render() {\n    const { selectedProducts } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          className=\"basket\"\n        >\n          {selectedProducts.length === 0 ? 'No goods selected'\n            : (selectedProducts.length === 1 ? `${selectedProducts} is selected`\n              : `${selectedProducts.join(', ')} are selected`)}\n\n          <button\n            type=\"button\"\n            className={\n              `basket__button\n              button\n              ${selectedProducts.length === 0\n        ? 'basket__button--empty'\n        : 'basket__button--not-empty'}`\n            }\n            onClick={() => this.clearAll()}\n          >\n            Clear\n          </button>\n        </h1>\n\n        <div className=\"goods\">\n          {goodsFromServer.map(good => (\n            <button\n              type=\"button\"\n              className={\n                `good\n                ${!selectedProducts.includes(good)\n              ? 'good--not-selected'\n              : 'good--selected'}`\n              }\n            >\n              {good}\n              <button\n                type=\"button\"\n                className={\n                  `good__button\n                  button\n                  ${!selectedProducts.includes(good)\n              ? 'good__button--not-selected'\n              : 'good__button--selected'}`\n                }\n                onClick={() => this.modifySelectedProducts(good)}\n              >\n                {selectedProducts.includes(good) ? 'Remove' : 'Select'}\n              </button>\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}